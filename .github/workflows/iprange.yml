# This is a basic workflow to help you get started with Actions

name: update-iprange

# Controls when the workflow will run
on:
  schedule:
    - cron: '8 */4 * * *' # At minute 8 past every 4th hour
    
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: download iprange
        run:  | 
          curl -s https://core.telegram.org/resources/cidr.txt > iprange/telegram.txt
          # curl -s https://www.gstatic.com/ipranges/goog.txt > iprange/google.txt


      - name: Commit files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail

          git remote add github "https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git pull github ${GITHUB_REF} --ff-only

          # Get name & email from 1st commit
          git config --local user.email "$(git log --format='%ae' --reverse | head -1)"
          git config --local user.name "$(git log --format='%an' --reverse | head -1)"

          # try commit
          git add .
          if [ -z "$(git status --porcelain)" ]; then
            echo 'No changes'
            exit 0
          fi
          git commit -m "Auto-update ip ranges"

          # push changes
          git push github HEAD:${GITHUB_REF}
